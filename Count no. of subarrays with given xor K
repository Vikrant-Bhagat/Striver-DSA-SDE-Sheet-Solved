int Solution::solve(vector<int> &A, int B) {
        int n = A.size(); //size of the given array.
        int xr = 0;
        map<int, int> mpp; //declaring the map.
        mpp[xr]++; //setting the value of 0.
        int cnt = 0;

        for (int i = 0; i < n; i++) {
            // prefix XOR till index i:
            xr = xr ^ A[i];

            //By formula: x = xr^k:
            int x = xr ^ B;

            // add the occurrence of xr^k
            // to the count:
            cnt += mpp[x];

            // Insert the prefix xor till index i
            // into the map:
            mpp[xr]++;
        }
    return cnt;
    // int x=0;
    // int count=0;
    // for(int i=0;i<A.size();i++){
    //     x=x^A[i];
    //     if(x==B){
    //         count++;
    //     }
    //     for(int j=i+1;j<A.size();j++){
    //         x=x^A[j];
    //         if(x==B){
    //             count++;
    //         }
    //     }
    //     x=0;
    // }
    //     return count;
}
